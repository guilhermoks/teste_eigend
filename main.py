from definitions import *
from utils import *
import matplotlib.pyplot as plt


def main():
    #--------------- ETAPA 1 ---------------#
    # 1) Importe os arquivos fornecidos
    node_file_path = get_file_path('node.xlsx')
    stress_file_path = get_file_path('stress.xlsx')
    
    nodes_list = import_xlsx(node_file_path, node_colums, first_row=2)
    stress_list = import_xlsx(stress_file_path, stress_colums, first_row=2)
    
    # 2) Calcule a tens칚o de von Mises
    tension_list = list(map(compute_von_mises_tension, stress_list))
    
    
    #--------------- ETAPA 2 ---------------#
    # 1) Construa uma vari치vel que dever치 conter tr칡s valores
    # 2) Atribua o valor de 7춿 para rota칞칚o em X, 0춿 para rota칞칚o em Y e 0춿 para rota칞칚o em Z
    # 3) Calcule e armazene a matriz de rota칞칚o
    # 4) Rotacione a tens칚o [洧랥] para cada n칩 da vari치vel correspondente ao arquivo stress.xlsm
    
    rotation_variable = {
        'new_sx': compute_tension_with_rotation(7, stress_list),
        'new_sy': compute_tension_with_rotation(0, stress_list),
        'new_sz': compute_tension_with_rotation(0, stress_list)      
    }

    # 5) Refa칞a a etapa 1.2 para os novos valores de tens칚o obtidos na etapa 2.4;
    # 6) Subtraia o resultado da etapa 1.2 pelo da etapa 2.5.
    tension_diff_list = get_tension_diff_list(rotation_variable, stress_list, tension_list)

    # 7) Fa칞a uma plotagem em dois subplots
    fig = plt.figure(figsize=(17, 6))
    fig.suptitle('Teste pr치tico Eigendauer')

    # 7.a) Plot 3D com todos os n칩s fornecidos no arquivo node.xlsm
    plot3d_nodes(fig, nodes_list)

    # 7.b) Gr치fico XY
    sx_before = [node['sx'] for node in stress_list] #Lista com 洧랥x original
    plot_xy_graph(fig, sx_before, rotation_variable['new_sx'], tension_diff_list) #Plota gr치fico com as tens칫es

    #mostra janela com os gr치ficos
    plt.legend()
    plt.show()

if __name__ == "__main__":
    main()